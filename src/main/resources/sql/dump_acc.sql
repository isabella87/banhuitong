REM Generated at 2018-04-09 15:23:44
REM PRODUCT VERSION: Oracle Database 11g Enterprise Edition 11.2.0.3.0 64bit Production
REM USER: ACC

REM Create common procedures
CREATE OR REPLACE PROCEDURE "DROP_TABLE_IF_EXISTS" (V_TABLE_NAME VARCHAR2) IS
BEGIN
  EXECUTE IMMEDIATE 'DROP TABLE ' || V_TABLE_NAME;
EXCEPTION
  WHEN OTHERS THEN
    IF SQLCODE <> -0942 THEN
      RAISE;
    END IF;
END DROP_TABLE_IF_EXISTS;
/
CREATE OR REPLACE PROCEDURE "DROP_SEQUENCE_IF_EXISTS" (V_SEQUENCE_NAME VARCHAR2) IS
BEGIN
  EXECUTE IMMEDIATE 'DROP SEQUENCE ' || V_SEQUENCE_NAME;
EXCEPTION
  WHEN OTHERS THEN
    IF SQLCODE <> -2289 THEN
      RAISE;
    END IF;
END DROP_SEQUENCE_IF_EXISTS;
/

REM Drop tables
CALL DROP_TABLE_IF_EXISTS('ACC_ORIGIN_RUNNING');
CALL DROP_TABLE_IF_EXISTS('ACC_JX_USER');
CALL DROP_TABLE_IF_EXISTS('ACC_CORP_INFO');
CALL DROP_TABLE_IF_EXISTS('TS_ORIGIN_HISTORY');
CALL DROP_TABLE_IF_EXISTS('SYS_TABLE_INFO');
CALL DROP_TABLE_IF_EXISTS('SYS_MODULE_INFO');
CALL DROP_TABLE_IF_EXISTS('MSG_SMS_YM');
CALL DROP_TABLE_IF_EXISTS('MSG_REG_USER');
CALL DROP_TABLE_IF_EXISTS('MSG_LOST_PWD');
CALL DROP_TABLE_IF_EXISTS('MSG_CHANGE_MOBILE');
CALL DROP_TABLE_IF_EXISTS('CP_USER');
CALL DROP_TABLE_IF_EXISTS('CP_SEQ');
CALL DROP_TABLE_IF_EXISTS('ACC_USER_REG_PWD_HISTORY');
CALL DROP_TABLE_IF_EXISTS('ACC_USER_REG');
CALL DROP_TABLE_IF_EXISTS('ACC_USER_OPERATION_LOG');
CALL DROP_TABLE_IF_EXISTS('ACC_PERSON_INFO');
CALL DROP_TABLE_IF_EXISTS('ACC_MESSAGE');
CALL DROP_TABLE_IF_EXISTS('ACC_INNER_USER_REG');
CALL DROP_TABLE_IF_EXISTS('ACC_FRIENDS_PATH');
CALL DROP_TABLE_IF_EXISTS('ACC_FRIENDS');
/

REM Create Table ACC_FRIENDS
CREATE TABLE "ACC_FRIENDS" (
	"A_ID" NUMBER NOT NULL,
	"D_ID" NUMBER NOT NULL,
	"BALANCE" NUMBER NULL
);
REM Column comments ACC_FRIENDS
COMMENT ON COLUMN "ACC_FRIENDS"."A_ID" IS '祖先节点';
COMMENT ON COLUMN "ACC_FRIENDS"."D_ID" IS '后代节点';
COMMENT ON COLUMN "ACC_FRIENDS"."BALANCE" IS '账户余额';
REM Primary key ACC_FRIENDS
ALTER TABLE "ACC_FRIENDS" ADD CONSTRAINT "ACC_FRIENDS_PK" PRIMARY KEY (D_ID) USING INDEX;
/

REM Create Table ACC_FRIENDS_PATH
CREATE TABLE "ACC_FRIENDS_PATH" (
	"A_ID" NUMBER NOT NULL,
	"D_ID" NUMBER NULL,
	"DEPTH" NUMBER NULL
);
REM Column comments ACC_FRIENDS_PATH
COMMENT ON COLUMN "ACC_FRIENDS_PATH"."A_ID" IS '祖先节点';
COMMENT ON COLUMN "ACC_FRIENDS_PATH"."D_ID" IS '后代节点';
COMMENT ON COLUMN "ACC_FRIENDS_PATH"."DEPTH" IS '度';
REM Primary key ACC_FRIENDS_PATH
ALTER TABLE "ACC_FRIENDS_PATH" ADD CONSTRAINT "ACC_FRIENDS_PATH_PK" PRIMARY KEY (A_ID) USING INDEX;
/

REM Create Table ACC_INNER_USER_REG
CREATE TABLE "ACC_INNER_USER_REG" (
	"AU_ID" NUMBER NULL
);
REM Column comments ACC_INNER_USER_REG
/

REM Create Table ACC_MESSAGE
CREATE TABLE "ACC_MESSAGE" (
	"AM_ID" NUMBER NOT NULL,
	"CONTENT" VARCHAR2(4000 CHAR) NOT NULL,
	"CREATE_TIME" DATE NOT NULL,
	"CREATOR" VARCHAR2(1280 CHAR) NOT NULL,
	"TITLE" VARCHAR2(1280 CHAR) NOT NULL,
	"BRIEF" VARCHAR2(4000 CHAR) NOT NULL,
	"AU_ID" NUMBER NOT NULL,
	"READ_TIME" DATE NULL,
	"TYPE" NUMBER DEFAULT 1 NULL
);
REM Column comments ACC_MESSAGE
COMMENT ON COLUMN "ACC_MESSAGE"."AM_ID" IS '主键';
COMMENT ON COLUMN "ACC_MESSAGE"."CONTENT" IS '消息内容';
COMMENT ON COLUMN "ACC_MESSAGE"."CREATE_TIME" IS '消息推送时间';
COMMENT ON COLUMN "ACC_MESSAGE"."CREATOR" IS '推送者';
COMMENT ON COLUMN "ACC_MESSAGE"."TITLE" IS '标题';
COMMENT ON COLUMN "ACC_MESSAGE"."BRIEF" IS '摘要';
COMMENT ON COLUMN "ACC_MESSAGE"."READ_TIME" IS '已读时间';
COMMENT ON COLUMN "ACC_MESSAGE"."TYPE" IS '消息类型（1，普通消息；2，借款人协议签署消息；）';
REM Primary key ACC_MESSAGE
ALTER TABLE "ACC_MESSAGE" ADD CONSTRAINT "ACC_MESSAGE_PK" PRIMARY KEY (AM_ID) USING INDEX;
/

REM Create Table ACC_PERSON_INFO
CREATE TABLE "ACC_PERSON_INFO" (
	"AU_ID" NUMBER NOT NULL,
	"ADDRESS" VARCHAR2(2000 CHAR) NULL,
	"HOME_PHONE" VARCHAR2(2000 CHAR) NULL,
	"POSTAL_CODE" VARCHAR2(2000 CHAR) NULL,
	"POSITION" VARCHAR2(2000 CHAR) NULL,
	"COMPANY" VARCHAR2(2000 CHAR) NULL,
	"COMPANY_TYPE" VARCHAR2(2000 CHAR) NULL,
	"QQ_NUMBER" VARCHAR2(2000 CHAR) NULL,
	"UPDATE_TIME" DATE NULL,
	"CREATE_TIME" DATE NULL,
	"REAL_NAME" VARCHAR2(2000 CHAR) NULL,
	"ID_CARD" VARCHAR2(2000 CHAR) NULL,
	"EMAIL" VARCHAR2(2000 CHAR) NULL,
	"ORG_CODE" VARCHAR2(2000 CHAR) NULL
);
REM Column comments ACC_PERSON_INFO
COMMENT ON COLUMN "ACC_PERSON_INFO"."AU_ID" IS '主键';
COMMENT ON COLUMN "ACC_PERSON_INFO"."ADDRESS" IS '通讯地址';
COMMENT ON COLUMN "ACC_PERSON_INFO"."HOME_PHONE" IS '家庭电话';
COMMENT ON COLUMN "ACC_PERSON_INFO"."POSTAL_CODE" IS '邮政编码';
COMMENT ON COLUMN "ACC_PERSON_INFO"."POSITION" IS '职务';
COMMENT ON COLUMN "ACC_PERSON_INFO"."COMPANY" IS '工作单位';
COMMENT ON COLUMN "ACC_PERSON_INFO"."COMPANY_TYPE" IS '单位类型';
COMMENT ON COLUMN "ACC_PERSON_INFO"."QQ_NUMBER" IS 'qq号码';
COMMENT ON COLUMN "ACC_PERSON_INFO"."UPDATE_TIME" IS '修改时间';
COMMENT ON COLUMN "ACC_PERSON_INFO"."CREATE_TIME" IS '创建时间';
COMMENT ON COLUMN "ACC_PERSON_INFO"."REAL_NAME" IS '真实姓名';
COMMENT ON COLUMN "ACC_PERSON_INFO"."ID_CARD" IS '身份证';
COMMENT ON COLUMN "ACC_PERSON_INFO"."EMAIL" IS '邮箱';
COMMENT ON COLUMN "ACC_PERSON_INFO"."ORG_CODE" IS '所属企业编号';
REM Primary key ACC_PERSON_INFO
ALTER TABLE "ACC_PERSON_INFO" ADD CONSTRAINT "ACC_PERSON_INFO_PK" PRIMARY KEY (AU_ID) USING INDEX;
/

REM Create Table ACC_USER_OPERATION_LOG
CREATE TABLE "ACC_USER_OPERATION_LOG" (
	"AU_ID" NUMBER NOT NULL,
	"OP_TIME" DATE NOT NULL,
	"OP_TYPE" NUMBER NULL,
	"OP_RESULT" NUMBER NULL,
	"IP" VARCHAR2(160 CHAR) NULL,
	"REMARK" VARCHAR2(4000 CHAR) NULL
);
REM Column comments ACC_USER_OPERATION_LOG
COMMENT ON COLUMN "ACC_USER_OPERATION_LOG"."AU_ID" IS '操作用户id';
COMMENT ON COLUMN "ACC_USER_OPERATION_LOG"."OP_TIME" IS '操作时间';
COMMENT ON COLUMN "ACC_USER_OPERATION_LOG"."OP_TYPE" IS '操作类型：1注册；2登录；3登出；4开户；5设置银行密码；6更改手机号；7更改姓名；8更改推荐码；9充值；10提现；11申请债权转让；12撤销债权转让；13投资；14债权权入；';
COMMENT ON COLUMN "ACC_USER_OPERATION_LOG"."OP_RESULT" IS '0失败，1成功';
COMMENT ON COLUMN "ACC_USER_OPERATION_LOG"."IP" IS '操作主机ip';
COMMENT ON COLUMN "ACC_USER_OPERATION_LOG"."REMARK" IS '备注';
REM Primary key ACC_USER_OPERATION_LOG
ALTER TABLE "ACC_USER_OPERATION_LOG" ADD CONSTRAINT "ACC_USER_OPERATION_LOG_PK" PRIMARY KEY (AU_ID,OP_TIME) USING INDEX;
/

REM Create Table ACC_USER_REG
CREATE TABLE "ACC_USER_REG" (
	"AU_ID" NUMBER NOT NULL,
	"LOGIN_NAME" VARCHAR2(640 CHAR) NOT NULL,
	"PASSWORD" VARCHAR2(3200 CHAR) NOT NULL,
	"USER_TYPE" NUMBER(3) NOT NULL,
	"RECOMMEND_MOBILE" VARCHAR2(1280 CHAR) NULL,
	"STATUS" NUMBER(3) NOT NULL,
	"REG_TIME" DATE NOT NULL,
	"AUDITOR" VARCHAR2(4000 CHAR) NULL,
	"AUDIT_TIME" DATE NULL,
	"ALLOW_INVEST" NUMBER DEFAULT 0 NULL,
	"ALLOW_BORROW" NUMBER DEFAULT 0 NULL,
	"MOBILE" VARCHAR2(80 CHAR) NULL,
	"REC_INFO_MODI_COUNT" NUMBER(2) DEFAULT 0 NULL,
	"OLD_INVEST_COUNT" NUMBER DEFAULT 0 NULL,
	"SRC" NUMBER(2) DEFAULT 0 NOT NULL,
	"LOCKED" NUMBER DEFAULT 0 NOT NULL,
	"LAST_LOGIN_FAILED_DATE" DATE NULL,
	"LOGIN_FAILED_COUNT" NUMBER DEFAULT 0 NULL,
	"GESTURE_PWD" VARCHAR2(1600) NULL,
	"GESTURE_PWD_STATUS" NUMBER NULL,
	"UUID" VARCHAR2(100) NULL
);
REM Column comments ACC_USER_REG
COMMENT ON COLUMN "ACC_USER_REG"."AU_ID" IS '主键';
COMMENT ON COLUMN "ACC_USER_REG"."LOGIN_NAME" IS '用户名';
COMMENT ON COLUMN "ACC_USER_REG"."PASSWORD" IS '密码';
COMMENT ON COLUMN "ACC_USER_REG"."USER_TYPE" IS '用户类型（1个人,2机构）';
COMMENT ON COLUMN "ACC_USER_REG"."RECOMMEND_MOBILE" IS '推荐人手机号';
COMMENT ON COLUMN "ACC_USER_REG"."STATUS" IS '用户状态。0待审核状态（此状态只存在于机构）；2已完成注册；98锁定；99停用；';
COMMENT ON COLUMN "ACC_USER_REG"."REG_TIME" IS '注册时间';
COMMENT ON COLUMN "ACC_USER_REG"."AUDITOR" IS '审核人id';
COMMENT ON COLUMN "ACC_USER_REG"."AUDIT_TIME" IS '审核时间';
COMMENT ON COLUMN "ACC_USER_REG"."ALLOW_INVEST" IS '是否允许投资';
COMMENT ON COLUMN "ACC_USER_REG"."ALLOW_BORROW" IS '是否允许借款';
COMMENT ON COLUMN "ACC_USER_REG"."MOBILE" IS '手机号码';
COMMENT ON COLUMN "ACC_USER_REG"."REC_INFO_MODI_COUNT" IS '推荐码（手机号）默认修改次数';
COMMENT ON COLUMN "ACC_USER_REG"."OLD_INVEST_COUNT" IS '老系统上投资次数';
COMMENT ON COLUMN "ACC_USER_REG"."SRC" IS '注册来源 0-未知 1-PC 2-移动端';
COMMENT ON COLUMN "ACC_USER_REG"."LOCKED" IS '0未锁，1已锁';
COMMENT ON COLUMN "ACC_USER_REG"."LAST_LOGIN_FAILED_DATE" IS '最后一次失败登录时间';
COMMENT ON COLUMN "ACC_USER_REG"."LOGIN_FAILED_COUNT" IS '最近5分钟失败登录次数';
COMMENT ON COLUMN "ACC_USER_REG"."GESTURE_PWD" IS '手势密码';
COMMENT ON COLUMN "ACC_USER_REG"."GESTURE_PWD_STATUS" IS '手势密码状态（0未设置；1已设置未启用；2已启用；98 锁定；99 停用）';
COMMENT ON COLUMN "ACC_USER_REG"."UUID" IS '手机唯一标识码';
REM Primary key ACC_USER_REG
ALTER TABLE "ACC_USER_REG" ADD CONSTRAINT "ACC_USER_REG_PK" PRIMARY KEY (AU_ID) USING INDEX;
/

REM Create Table ACC_USER_REG_PWD_HISTORY
CREATE TABLE "ACC_USER_REG_PWD_HISTORY" (
	"ID" NUMBER NOT NULL,
	"OPERATOR" NUMBER NULL,
	"OPERATE_TIME" DATE NULL,
	"SOURCE" NUMBER NULL,
	"VCODE" VARCHAR2(1280 CHAR) NULL
);
REM Column comments ACC_USER_REG_PWD_HISTORY
COMMENT ON COLUMN "ACC_USER_REG_PWD_HISTORY"."OPERATOR" IS '注册表au_id（0表后台插入）';
COMMENT ON COLUMN "ACC_USER_REG_PWD_HISTORY"."OPERATE_TIME" IS '操作时间';
COMMENT ON COLUMN "ACC_USER_REG_PWD_HISTORY"."SOURCE" IS '来源（1手机验证码方式，9后台手动插入方式';
COMMENT ON COLUMN "ACC_USER_REG_PWD_HISTORY"."VCODE" IS '验证码';
REM Primary key ACC_USER_REG_PWD_HISTORY
ALTER TABLE "ACC_USER_REG_PWD_HISTORY" ADD CONSTRAINT "ACC_USER_REG_PWD_HISTORY_PK" PRIMARY KEY (ID) USING INDEX;
/

REM Create Table CP_SEQ
CREATE TABLE "CP_SEQ" (
	"DAY" VARCHAR2(8) NULL,
	"SEQ" NUMBER(8) NULL
);
REM Column comments CP_SEQ
/

REM Create Table CP_USER
CREATE TABLE "CP_USER" (
	"CU_ID" NUMBER NULL,
	"USER_ID" VARCHAR2(200) NULL,
	"DATEPOINT" TIMESTAMP(6) NULL,
	"USER_TYPE" NUMBER NULL,
	"ROLE_TYPE" NUMBER NULL
);
REM Column comments CP_USER
/

REM Create Table MSG_CHANGE_MOBILE
CREATE TABLE "MSG_CHANGE_MOBILE" (
	"M_ID" NUMBER NOT NULL,
	"MOBILE" VARCHAR2(3200 CHAR) NOT NULL,
	"V_CODE" VARCHAR2(320 CHAR) NOT NULL,
	"DATEPOINT" DATE NOT NULL,
	"STATUS" NUMBER DEFAULT 0 NOT NULL
);
REM Column comments MSG_CHANGE_MOBILE
COMMENT ON COLUMN "MSG_CHANGE_MOBILE"."M_ID" IS 'id。';
COMMENT ON COLUMN "MSG_CHANGE_MOBILE"."MOBILE" IS '手机号';
COMMENT ON COLUMN "MSG_CHANGE_MOBILE"."V_CODE" IS '验证码';
COMMENT ON COLUMN "MSG_CHANGE_MOBILE"."DATEPOINT" IS '创建时间';
COMMENT ON COLUMN "MSG_CHANGE_MOBILE"."STATUS" IS '0：未验证过，已验证（使用过）';
REM Primary key MSG_CHANGE_MOBILE
ALTER TABLE "MSG_CHANGE_MOBILE" ADD CONSTRAINT "MSG_CHANGE_MOBILE_PK" PRIMARY KEY (M_ID) USING INDEX;
/

REM Create Table MSG_LOST_PWD
CREATE TABLE "MSG_LOST_PWD" (
	"M_ID" NUMBER NOT NULL,
	"MOBILE" VARCHAR2(3200 CHAR) NOT NULL,
	"V_CODE" VARCHAR2(320 CHAR) NOT NULL,
	"DATEPOINT" DATE NOT NULL,
	"STATUS" NUMBER DEFAULT 0 NOT NULL
);
REM Column comments MSG_LOST_PWD
COMMENT ON COLUMN "MSG_LOST_PWD"."M_ID" IS '主键';
COMMENT ON COLUMN "MSG_LOST_PWD"."MOBILE" IS '手机号';
COMMENT ON COLUMN "MSG_LOST_PWD"."V_CODE" IS '激活码';
COMMENT ON COLUMN "MSG_LOST_PWD"."DATEPOINT" IS '创建时间';
COMMENT ON COLUMN "MSG_LOST_PWD"."STATUS" IS '状态。0未验证，1已验证（已使用）';
REM Primary key MSG_LOST_PWD
ALTER TABLE "MSG_LOST_PWD" ADD CONSTRAINT "MSG_LOST_PWD_PK" PRIMARY KEY (M_ID) USING INDEX;
/

REM Create Table MSG_REG_USER
CREATE TABLE "MSG_REG_USER" (
	"M_ID" NUMBER NOT NULL,
	"MOBILE" VARCHAR2(4000 CHAR) NOT NULL,
	"V_CODE" VARCHAR2(640 CHAR) NOT NULL,
	"DATEPOINT" DATE NOT NULL,
	"STATUS" NUMBER DEFAULT 0 NOT NULL
);
REM Column comments MSG_REG_USER
COMMENT ON COLUMN "MSG_REG_USER"."M_ID" IS 'id。';
COMMENT ON COLUMN "MSG_REG_USER"."MOBILE" IS '手机号码';
COMMENT ON COLUMN "MSG_REG_USER"."V_CODE" IS '验证码';
COMMENT ON COLUMN "MSG_REG_USER"."DATEPOINT" IS '创建时间';
COMMENT ON COLUMN "MSG_REG_USER"."STATUS" IS '0：未验证。1：已验证（已使用过）';
REM Primary key MSG_REG_USER
ALTER TABLE "MSG_REG_USER" ADD CONSTRAINT "MSG_REG_USER_PK" PRIMARY KEY (M_ID) USING INDEX;
/

REM Create Table MSG_SMS_YM
CREATE TABLE "MSG_SMS_YM" (
	"MOBILE" VARCHAR2(4000 CHAR) NOT NULL,
	"CONTENT" VARCHAR2(4000 CHAR) NOT NULL,
	"T_CODE" NUMBER NOT NULL,
	"P_ID" NUMBER NOT NULL,
	"STATUS" NUMBER DEFAULT 0 NOT NULL,
	"RETRY_COUNT" NUMBER DEFAULT 0 NOT NULL,
	"S_CODE" NUMBER DEFAULT 0 NOT NULL,
	"ERROR" VARCHAR2(4000 CHAR) NULL,
	"DATEPOINT" DATE NOT NULL,
	"DATEPOINT2" DATE NULL,
	"MS_ID" NUMBER NOT NULL
);
REM Column comments MSG_SMS_YM
COMMENT ON COLUMN "MSG_SMS_YM"."MOBILE" IS '手机号码';
COMMENT ON COLUMN "MSG_SMS_YM"."CONTENT" IS '内容';
COMMENT ON COLUMN "MSG_SMS_YM"."T_CODE" IS '业务操作表的类型，1 - 用户注册  ,2 - 丢失密码 ,3 - 修改手机，4 - 合同签章';
COMMENT ON COLUMN "MSG_SMS_YM"."P_ID" IS '关联的业务操作表的ID';
COMMENT ON COLUMN "MSG_SMS_YM"."DATEPOINT" IS '插入记录的时间';
REM Primary key MSG_SMS_YM
ALTER TABLE "MSG_SMS_YM" ADD CONSTRAINT "MSG_SMS_YM_PK" PRIMARY KEY (MS_ID) USING INDEX;
/

REM Create Table SYS_MODULE_INFO
CREATE TABLE "SYS_MODULE_INFO" (
	"SMI_ID" NUMBER NOT NULL,
	"MODULE_NAME" VARCHAR2(80 CHAR) NOT NULL,
	"MODULE_NO" NUMBER NOT NULL,
	"MUDULE_SHORT_NAME" VARCHAR2(40 CHAR) NOT NULL,
	"MUDULE_DESC" VARCHAR2(400 CHAR) NOT NULL,
	"CREATOR" VARCHAR2(80 CHAR) NOT NULL,
	"CREATE_TIME" DATE NOT NULL
);
COMMENT ON TABLE "SYS_MODULE_INFO" IS '系统模块信息表';
REM Column comments SYS_MODULE_INFO
COMMENT ON COLUMN "SYS_MODULE_INFO"."SMI_ID" IS '主键';
COMMENT ON COLUMN "SYS_MODULE_INFO"."MODULE_NAME" IS '所属模块名称';
COMMENT ON COLUMN "SYS_MODULE_INFO"."MODULE_NO" IS '模块代码';
COMMENT ON COLUMN "SYS_MODULE_INFO"."MUDULE_SHORT_NAME" IS '模块名简称（对应模块表以该值为前缀）';
COMMENT ON COLUMN "SYS_MODULE_INFO"."MUDULE_DESC" IS '模块简述';
COMMENT ON COLUMN "SYS_MODULE_INFO"."CREATOR" IS '创建人';
COMMENT ON COLUMN "SYS_MODULE_INFO"."CREATE_TIME" IS '创建时间';
REM Primary key SYS_MODULE_INFO
ALTER TABLE "SYS_MODULE_INFO" ADD CONSTRAINT "SYS_MODULE_INFO_PK" PRIMARY KEY (SMI_ID) USING INDEX;
/

REM Create Table SYS_TABLE_INFO
REM Depend on table(s)
REM [SYS_MODULE_INFO]
CREATE TABLE "SYS_TABLE_INFO" (
	"STI_ID" NUMBER NOT NULL,
	"TABLE_NAME" VARCHAR2(80 CHAR) NOT NULL,
	"SMI_ID" NUMBER DEFAULT 0 NOT NULL,
	"TABLE_COMMENTS" VARCHAR2(400 CHAR) NULL,
	"REMARK" VARCHAR2(400 CHAR) NULL,
	"CREATOR" VARCHAR2(20) NOT NULL,
	"CREATE_TIME" DATE NOT NULL
);
COMMENT ON TABLE "SYS_TABLE_INFO" IS '系统表名信息表';
REM Column comments SYS_TABLE_INFO
COMMENT ON COLUMN "SYS_TABLE_INFO"."STI_ID" IS '主键';
COMMENT ON COLUMN "SYS_TABLE_INFO"."TABLE_NAME" IS '表名';
COMMENT ON COLUMN "SYS_TABLE_INFO"."SMI_ID" IS '系统模块表外键';
COMMENT ON COLUMN "SYS_TABLE_INFO"."TABLE_COMMENTS" IS '表注释（此列的信息可来自各表的注释，也可后台录入）';
COMMENT ON COLUMN "SYS_TABLE_INFO"."REMARK" IS '备注（对表包含内容的简要介绍，或者表在逻辑内的简述）';
COMMENT ON COLUMN "SYS_TABLE_INFO"."CREATOR" IS '创建人';
COMMENT ON COLUMN "SYS_TABLE_INFO"."CREATE_TIME" IS '创建时间';
REM Primary key SYS_TABLE_INFO
ALTER TABLE "SYS_TABLE_INFO" ADD CONSTRAINT "SYS_TABLE_INFO_PK" PRIMARY KEY (STI_ID) USING INDEX;
REM Foreign keys SYS_TABLE_INFO
ALTER TABLE "SYS_TABLE_INFO" ADD CONSTRAINT "SYS_TABLE_INFO_FK1" FOREIGN KEY (SMI_ID) REFERENCES "SYS_MODULE_INFO" (SMI_ID) ON DELETE CASCADE;
/

REM Create Table TS_ORIGIN_HISTORY
CREATE TABLE "TS_ORIGIN_HISTORY" (
	"DATEPOINT" VARCHAR2(32 CHAR) NOT NULL,
	"RETRY_COUNT" NUMBER DEFAULT 0 NOT NULL,
	"RETCODE" VARCHAR2(160 CHAR) NULL,
	"RETMSG" VARCHAR2(160 CHAR) NULL,
	"DONE" NUMBER DEFAULT 0 NOT NULL
);
REM Column comments TS_ORIGIN_HISTORY
COMMENT ON COLUMN "TS_ORIGIN_HISTORY"."DATEPOINT" IS '日期';
COMMENT ON COLUMN "TS_ORIGIN_HISTORY"."RETRY_COUNT" IS '重试次数';
COMMENT ON COLUMN "TS_ORIGIN_HISTORY"."DONE" IS '是否已下载';
REM Primary key TS_ORIGIN_HISTORY
ALTER TABLE "TS_ORIGIN_HISTORY" ADD CONSTRAINT "TS_ORIGIN_HISTORY_PK" PRIMARY KEY (DATEPOINT) USING INDEX;
/

REM Create Table ACC_CORP_INFO
REM Depend on table(s)
REM [ACC_USER_REG]
CREATE TABLE "ACC_CORP_INFO" (
	"AU_ID" NUMBER NOT NULL,
	"ORG_NAME" VARCHAR2(2000 CHAR) NULL,
	"BUSS_LIC" VARCHAR2(2000 CHAR) NULL,
	"TAX_LIC" VARCHAR2(2000 CHAR) NULL,
	"ORG_CODE_NO" VARCHAR2(2000 CHAR) NULL,
	"LAW_NAME" VARCHAR2(2000 CHAR) NULL,
	"LAW_ID_CARD" VARCHAR2(2000 CHAR) NULL,
	"ACC_USER_NAME" VARCHAR2(2000 CHAR) NULL,
	"ACCOUNT" VARCHAR2(2000 CHAR) NULL,
	"ACC_BANK" VARCHAR2(2000 CHAR) NULL,
	"CREATE_TIME" DATE NULL,
	"UPDATE_TIME" DATE NULL,
	"REAL_NAME" VARCHAR2(2000 CHAR) NULL,
	"POSITION" VARCHAR2(2000 CHAR) NULL,
	"ID_CARD" VARCHAR2(2000 CHAR) NULL,
	"COMPANY" VARCHAR2(2000 CHAR) NULL,
	"COMPANY_TYPE" VARCHAR2(2000 CHAR) NULL,
	"ADDRESS" VARCHAR2(2000 CHAR) NULL,
	"POSTAL_CODE" VARCHAR2(2000 CHAR) NULL,
	"HOME_PHONE" VARCHAR2(2000 CHAR) NULL,
	"QQ_NUMBER" VARCHAR2(2000 CHAR) NULL,
	"EMAIL" VARCHAR2(2000 CHAR) NULL
);
REM Column comments ACC_CORP_INFO
COMMENT ON COLUMN "ACC_CORP_INFO"."ORG_NAME" IS '机构名称';
COMMENT ON COLUMN "ACC_CORP_INFO"."BUSS_LIC" IS '营业执照号';
COMMENT ON COLUMN "ACC_CORP_INFO"."TAX_LIC" IS '税务登记证号';
COMMENT ON COLUMN "ACC_CORP_INFO"."ORG_CODE_NO" IS '组织机构代码证号';
COMMENT ON COLUMN "ACC_CORP_INFO"."LAW_NAME" IS '法人姓名';
COMMENT ON COLUMN "ACC_CORP_INFO"."LAW_ID_CARD" IS '法人身份证号';
COMMENT ON COLUMN "ACC_CORP_INFO"."ACC_USER_NAME" IS '银行账户户名';
COMMENT ON COLUMN "ACC_CORP_INFO"."ACCOUNT" IS '银行账号';
COMMENT ON COLUMN "ACC_CORP_INFO"."ACC_BANK" IS '银行账户开户行';
COMMENT ON COLUMN "ACC_CORP_INFO"."CREATE_TIME" IS '创建时间';
COMMENT ON COLUMN "ACC_CORP_INFO"."UPDATE_TIME" IS '更新时间';
COMMENT ON COLUMN "ACC_CORP_INFO"."REAL_NAME" IS '姓名';
COMMENT ON COLUMN "ACC_CORP_INFO"."POSITION" IS '职务';
COMMENT ON COLUMN "ACC_CORP_INFO"."ID_CARD" IS '身份证';
COMMENT ON COLUMN "ACC_CORP_INFO"."COMPANY" IS '工作单位';
COMMENT ON COLUMN "ACC_CORP_INFO"."COMPANY_TYPE" IS '单位类型';
COMMENT ON COLUMN "ACC_CORP_INFO"."ADDRESS" IS '通讯地址';
COMMENT ON COLUMN "ACC_CORP_INFO"."POSTAL_CODE" IS '邮政编码';
COMMENT ON COLUMN "ACC_CORP_INFO"."HOME_PHONE" IS '家庭电话';
COMMENT ON COLUMN "ACC_CORP_INFO"."QQ_NUMBER" IS 'qq号码';
COMMENT ON COLUMN "ACC_CORP_INFO"."EMAIL" IS '邮箱';
REM Primary key ACC_CORP_INFO
ALTER TABLE "ACC_CORP_INFO" ADD CONSTRAINT "ACC_CORP_INFO_PK" PRIMARY KEY (AU_ID) USING INDEX;
REM Foreign keys ACC_CORP_INFO
ALTER TABLE "ACC_CORP_INFO" ADD CONSTRAINT "ACC_CORP_INFO_DELETE_FK1" FOREIGN KEY (AU_ID) REFERENCES "ACC_USER_REG" (AU_ID) ON DELETE CASCADE;
/

REM Create Table ACC_JX_USER
REM Depend on table(s)
REM [ACC_USER_REG]
CREATE TABLE "ACC_JX_USER" (
	"AU_ID" NUMBER NOT NULL,
	"USER_ID" VARCHAR2(2000 CHAR) NULL,
	"RECARD" VARCHAR2(2000 CHAR) NULL,
	"NAME" VARCHAR2(1920 CHAR) NULL,
	"ID_CARD" VARCHAR2(576 CHAR) NULL,
	"MOBILE" VARCHAR2(384 CHAR) NULL,
	"DATEPOINT" DATE NULL,
	"ID_TYPE" VARCHAR2(80 CHAR) NULL,
	"AUTO_TENDER_AUTH" NUMBER NULL,
	"MAX_AUTO_TENDER_AMT" NUMBER NULL,
	"PWD_SET" NUMBER(1) DEFAULT 0 NULL,
	"IDENTITY" NUMBER NULL,
	"PAY_AUTH" NUMBER(1) DEFAULT 0 NULL,
	"REPAY_AUTH" NUMBER(1) DEFAULT 0 NULL
);
REM Column comments ACC_JX_USER
COMMENT ON COLUMN "ACC_JX_USER"."USER_ID" IS '即信电子账户';
COMMENT ON COLUMN "ACC_JX_USER"."RECARD" IS '绑定卡号';
COMMENT ON COLUMN "ACC_JX_USER"."NAME" IS '持卡人姓名';
COMMENT ON COLUMN "ACC_JX_USER"."ID_CARD" IS '身份证号';
COMMENT ON COLUMN "ACC_JX_USER"."MOBILE" IS '手机号';
COMMENT ON COLUMN "ACC_JX_USER"."ID_TYPE" IS '01(18位身份证号码），02（15位身份证号码），20（组织机构代码），25（社会信用号）';
COMMENT ON COLUMN "ACC_JX_USER"."PWD_SET" IS '是否设置银行卡密码.0表示未设置,1已设置';
COMMENT ON COLUMN "ACC_JX_USER"."IDENTITY" IS '1：出借角色 2：借款角色 3：代偿角色';
COMMENT ON COLUMN "ACC_JX_USER"."PAY_AUTH" IS '是否设置缴费授权，0：未设置， 1： 已设置';
COMMENT ON COLUMN "ACC_JX_USER"."REPAY_AUTH" IS '是否设置还款授权，0： 为设置， 1： 已设置';
REM Primary key ACC_JX_USER
ALTER TABLE "ACC_JX_USER" ADD CONSTRAINT "ACC_JX_USER_PK" PRIMARY KEY (AU_ID) USING INDEX;
REM Foreign keys ACC_JX_USER
ALTER TABLE "ACC_JX_USER" ADD CONSTRAINT "ACC_JX_USER_DELETE_FK1" FOREIGN KEY (AU_ID) REFERENCES "ACC_USER_REG" (AU_ID) ON DELETE CASCADE;
/

REM Create Table ACC_ORIGIN_RUNNING
REM Depend on table(s)
REM [ACC_USER_REG]
CREATE TABLE "ACC_ORIGIN_RUNNING" (
	"BANK" NUMBER(4) NULL,
	"AU_ID" NUMBER NULL,
	"CARDNBR" VARCHAR2(76 CHAR) NULL,
	"AMOUNT" NUMBER(17,2) NULL,
	"CRFLAG" VARCHAR2(4 CHAR) NULL,
	"DATEPOINT" DATE NULL,
	"TRANNO" NUMBER(20) NOT NULL,
	"ORI_TRANNO" NUMBER(20) NULL,
	"TRANSTYPE" NUMBER(4) NULL,
	"DESLINE" VARCHAR2(168 CHAR) NULL,
	"CURR_BAL" NUMBER(17,2) NULL,
	"FORCARDNBR" VARCHAR2(76 CHAR) NULL,
	"FOR_AU_ID" NUMBER NULL,
	"REVIND" NUMBER NULL
);
REM Column comments ACC_ORIGIN_RUNNING
COMMENT ON COLUMN "ACC_ORIGIN_RUNNING"."BANK" IS '银行号';
COMMENT ON COLUMN "ACC_ORIGIN_RUNNING"."AU_ID" IS '用户au_id';
COMMENT ON COLUMN "ACC_ORIGIN_RUNNING"."CARDNBR" IS '电子账号';
COMMENT ON COLUMN "ACC_ORIGIN_RUNNING"."AMOUNT" IS '交易金额';
COMMENT ON COLUMN "ACC_ORIGIN_RUNNING"."CRFLAG" IS '交易金额符号';
COMMENT ON COLUMN "ACC_ORIGIN_RUNNING"."DATEPOINT" IS '交易日期';
COMMENT ON COLUMN "ACC_ORIGIN_RUNNING"."TRANNO" IS '交易流水号';
COMMENT ON COLUMN "ACC_ORIGIN_RUNNING"."ORI_TRANNO" IS '该交易为手续费交易时，关联流水号为原交易的流水号';
COMMENT ON COLUMN "ACC_ORIGIN_RUNNING"."TRANSTYPE" IS '交易类型';
COMMENT ON COLUMN "ACC_ORIGIN_RUNNING"."DESLINE" IS '交易描述';
COMMENT ON COLUMN "ACC_ORIGIN_RUNNING"."CURR_BAL" IS '交易后余额';
COMMENT ON COLUMN "ACC_ORIGIN_RUNNING"."FORCARDNBR" IS '对手交易帐号';
COMMENT ON COLUMN "ACC_ORIGIN_RUNNING"."FOR_AU_ID" IS '对手用户au_iud';
COMMENT ON COLUMN "ACC_ORIGIN_RUNNING"."REVIND" IS '冲正、撤销标志(2-已撤销/冲正
空或1-正常交易)';
REM Primary key ACC_ORIGIN_RUNNING
ALTER TABLE "ACC_ORIGIN_RUNNING" ADD CONSTRAINT "ACC_ORIGIN_RUNNING_PK" PRIMARY KEY (TRANNO) USING INDEX;
REM Foreign keys ACC_ORIGIN_RUNNING
ALTER TABLE "ACC_ORIGIN_RUNNING" ADD CONSTRAINT "ACC_ORIGIN_RUNNING_DELETE_FK1" FOREIGN KEY (AU_ID) REFERENCES "ACC_USER_REG" (AU_ID) ON DELETE CASCADE;
/

REM Drop sequences
CALL DROP_SEQUENCE_IF_EXISTS('TS_ID');
CALL DROP_SEQUENCE_IF_EXISTS('MSG_SMS_YM_ID');
CALL DROP_SEQUENCE_IF_EXISTS('MSG_SMS_MW_ID');
CALL DROP_SEQUENCE_IF_EXISTS('MSG_ID');
CALL DROP_SEQUENCE_IF_EXISTS('LOG_ID');
CALL DROP_SEQUENCE_IF_EXISTS('AU_ID');
CALL DROP_SEQUENCE_IF_EXISTS('AM_ID');
/

REM Create sequence AM_ID
CREATE SEQUENCE "AM_ID" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 ORDER;
/

REM Create sequence AU_ID
CREATE SEQUENCE "AU_ID" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 ORDER;
/

REM Create sequence LOG_ID
CREATE SEQUENCE "LOG_ID" MINVALUE 1 MAXVALUE 99999999999999999999999 INCREMENT BY 1 ORDER;
/

REM Create sequence MSG_ID
CREATE SEQUENCE "MSG_ID" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 ORDER;
/

REM Create sequence MSG_SMS_MW_ID
CREATE SEQUENCE "MSG_SMS_MW_ID" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 ORDER;
/

REM Create sequence MSG_SMS_YM_ID
CREATE SEQUENCE "MSG_SMS_YM_ID" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 ORDER;
/

REM Create sequence TS_ID
CREATE SEQUENCE "TS_ID" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 ORDER;
/


